# Programs to use
CC         := sparc-elf-gcc
LD         := sparc-elf-gcc
OBJCOPY    := sparc-elf-objcopy
OBJDUMP    := sparc-elf-objdump
SIZE       := sparc-elf-size
MAKEDEPEND := makedepend
WAVEREC    := WaveRecorder

# WaveRecorder settings
BAUD       := 115200
CHANNELS   := 2
PROTOCOL   := Debugger

# Defines for conditional compilation
CPU        := LEON3
DEFINES    := $(CPU) $(DSO_TARGET) $(DSO_BOARD)
DEFINES    := $(addprefix -D,$(DEFINES))

# Flags
CFLAGS  := $(DEFINES)
CFLAGS += --std=c99             # We code Standard C
CFLAGS += -msoft-float          # Use functions in libgcc.a to perform floating point operations
CFLAGS += -qsvt
CFLAGS += -mv8                  # Use V8 ISA
CFLAGS += -O2                   # Optimize some
CFLAGS += -Wall                 # Enable many warnings
CFLAGS += -Wextra               # Enable even more warnings
CFLAGS += -Werror               # Error out on warnings
CFLAGS += -Wno-unused-parameter # Do not warn about unused function parameters

# Target variables

SOURCE_DIRS  := $(DSOPATH) $(DSOPATH)/thirdparty $(DSOPATH)/fonts
INCLUDE_DIRS := $(addprefix -I,$(SOURCE_DIRS))
INCLUDE_DIRS += -I$(DSOPATH)/../grlib-W2000A/software/leon3
CFLAGS       += $(INCLUDE_DIRS)

SOURCES      := $(foreach DIR, $(SOURCE_DIRS), $(wildcard $(DIR)/*.c))
HEADERS      := $(foreach DIR, $(SOURCE_DIRS), $(wildcard $(DIR)/*.h))
OBJ_TEMP     := $(notdir $(SOURCES)) 
OBJS	     := $(OBJ_TEMP:%.c=%.o)
ASMS	     := $(OBJ_TEMP:%.c=%.s)
OBJDIR       := objs

vpath %.c $(SOURCE_DIRS)

DEPENDFILE   := depend
TARGET       := w2000a.bin
DUMP         := w2000a.S
LEONADDR     := 0x80000500

CABLE        := -c "Nios II Evaluation Board"
MODE         := -m JTAG
SOF          := $(DSOPATH)/../Scope/synW2000A/W2000A.sof
PROGRAM      := -o p\;$(SOF)

# Files to be cleaned
CLEAN := $(OBJDIR) $(ASMS) $(DEPENDFILE) $(DEPENDFILE:=.bak) $(TARGET) $(TARGET:.bin=.elf) $(DUMP)

# Force make to forget all its builtin rules
.SUFFIXES:

# Force make to keep all intermediate files
.SECONDARY:

# Rules for maintenance
.PHONY: all
all: $(TARGET)

.PHONY: clean
clean:
	@echo " [CLEAN  ]"
	@$(RM) -r $(CLEAN)

.PHONY: upload
upload: w2000a.bin
	$(WAVEREC) -p Debugger -u $(UART) -b $(BAUD) -n $(CHANNELS) -c LoadRun --Ffile=$<

.PHONY: program
program: $(SOF)
	quartus_pgm $(CABLE) $(MODE) $(PROGRAM)

.PHONY: backtrace
backtrace: 
	$(WAVEREC) -p Debugger -u $(UART) -b $(BAUD) -n $(CHANNELS) -c Debug 

.PHONY: readaddr
readaddr:
	$(WAVEREC) -p Debugger -u $(UART) -b $(BAUD) -n $(CHANNELS) -c Debug --CapSize=64 --Faddr=$(LEONADDR)

.PHONY: dump
dump:
	@$(OBJDUMP) -S $^ > $(DUMP)

# Rules for building
%.bin: %.elf
	@echo " [OBJCOPY] $^"
	@$(OBJCOPY) -O binary $^ $@

%.elf: $(addprefix $(OBJDIR)/,$(OBJS))
	@echo " [LINK   ] $^"
	@$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@
	@$(SIZE) $@

$(OBJDIR)/%.o: %.c
	@echo " [COMPILE] $<"
	@mkdir -p $(addprefix $(OBJDIR)/,$(SOURCE_DIRS))
	@$(COMPILE.c) -o $@ $<

# Dependencies

# We usually want a full remake when the Makefile changes
$(OBJS): Makefile.firmware

# Automatic dependency rule generation by makedepend
MAKEDEPEND_DELIMITER = "\# Do not edit this file, run make depend to update!"
$(DEPENDFILE): $(SOURCES) $(HEADERS)
	@echo " [DEPEND] "
	@touch $@
	@$(MAKEDEPEND) -Y -m -s $(MAKEDEPEND_DELIMITER) -f $@ -- $(CFLAGS) $(LDFLAGS) -- $(SOURCES) >/dev/null 2>&1

include $(DEPENDFILE)
