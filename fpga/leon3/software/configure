##!/bin/bash
# Author: Alexander Lindert <alexander_lindert@gmx.at>
# Copyright 2010
# License GPLv2

echo "Open Source Digital Storage Oscilloscope configure script"
echo "Enter software the folder location if this file was moved to an external location!"
echo "     (eg. ../../../fpga/software)"
echo "Default: ."
read DSOPATH
if [ -z "${DSOPATH}" ]; then
	DSOPATH="."
fi

echo "Enter your (serial) connection to program the oscilloscope"
echo "Some suggestions available on your system:"
ls /dev/ttyS* /dev/ttyU* 2>/dev/null
echo "Default: /dev/ttyS0"
read UART
if [ -z "${UART}" ]; then
	UART="/dev/ttyS0"
fi

echo "Is this your simulation compilation folder (Y/N) (default: N)"
read SIM
case "${SIM}" in
	Y | y)
	DSO_BOARD=SIM_COMPILATION
	;;
	*)
	DSO_BOARD=BOARD_COMPILATION
	;;
esac

echo "Enter your Target:"
echo "(1) Welec W2022A"
echo "(2) Welec W2024A (not supported at the moment)"
echo "(3) SandboxX (out of date)"
echo "Default: 1"
read TX
case "${TX}" in
	3)
	TARGET=SBXX
	;;
	*)
	TARGET=W2000A
	;;
esac

echo "The following Makefile is being generated:" 

echo "#Open Source Digital Storage Oscilloscope user compile configurations generated by configure.sh" > Makefile
echo "DSOPATH=$DSOPATH" >> Makefile
echo "UART=$UART" >> Makefile
echo "DSO_BOARD=$DSO_BOARD" >> Makefile
echo "TARGET=$TARGET" >> Makefile
echo "include ${DSOPATH}/Makefile.firmware" >> Makefile

cat Makefile

echo "Makefile generation is done." 

# if you cannot execute this file you can generate your Makefile also manually with at 
# minimum these following lines (without the #):

#DSOPATH=.
#UART=COM3
#DSO_BOARD=BOARD_COMPILATION
#TARGET=W2000A
#include ./Makefile.firmware
